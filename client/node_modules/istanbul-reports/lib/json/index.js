/*
 Copyright 2012-2015, Yahoo Inc.
 Copyrights licensed under the New BSD License. See the accompanying LICENSE file for terms.
 */
<<<<<<< HEAD
"use strict";
=======
'use strict';
>>>>>>> master

function JsonReport(opts) {
    this.file = opts.file || 'coverage-final.json';
    this.first = true;
}

<<<<<<< HEAD
JsonReport.prototype.onStart = function (root, context) {
    this.contentWriter = context.writer.writeFile(this.file);
    this.contentWriter.write("{");
};

JsonReport.prototype.onDetail = function (node) {
    var fc = node.getFileCoverage(),
        key = fc.path,
        cw = this.contentWriter;
=======
JsonReport.prototype.onStart = function(root, context) {
    this.contentWriter = context.writer.writeFile(this.file);
    this.contentWriter.write('{');
};

JsonReport.prototype.onDetail = function(node) {
    const fc = node.getFileCoverage();
    const key = fc.path;
    const cw = this.contentWriter;
>>>>>>> master

    if (this.first) {
        this.first = false;
    } else {
<<<<<<< HEAD
        cw.write(",");
=======
        cw.write(',');
>>>>>>> master
    }
    cw.write(JSON.stringify(key));
    cw.write(': ');
    cw.write(JSON.stringify(fc));
<<<<<<< HEAD
    cw.println("");
};

JsonReport.prototype.onEnd = function () {
    var cw = this.contentWriter;
    cw.println("}");
=======
    cw.println('');
};

JsonReport.prototype.onEnd = function() {
    const cw = this.contentWriter;
    cw.println('}');
>>>>>>> master
    cw.close();
};

module.exports = JsonReport;
