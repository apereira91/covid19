<<<<<<< HEAD
'use strict';
=======
"use strict";
>>>>>>> master

Object.defineProperty(exports, "__esModule", {
  value: true
});
<<<<<<< HEAD

var _lodash = require('lodash');

var _lodash2 = _interopRequireDefault(_lodash);

var _stringWidth = require('string-width');

var _stringWidth2 = _interopRequireDefault(_stringWidth);

var _wrapWord = require('./wrapWord');

var _wrapWord2 = _interopRequireDefault(_wrapWord);
=======
exports.default = void 0;

var _isString2 = _interopRequireDefault(require("lodash/isString"));

var _wrapCell = _interopRequireDefault(require("./wrapCell"));
>>>>>>> master

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * @param {string} value
 * @param {number} columnWidth
 * @param {boolean} useWrapWord
 * @returns {number}
 */
<<<<<<< HEAD
exports.default = function (value, columnWidth) {
  let useWrapWord = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;

  if (!_lodash2.default.isString(value)) {
=======
const calculateCellHeight = (value, columnWidth, useWrapWord = false) => {
  if (!(0, _isString2.default)(value)) {
>>>>>>> master
    throw new TypeError('Value must be a string.');
  }

  if (!Number.isInteger(columnWidth)) {
    throw new TypeError('Column width must be an integer.');
  }

  if (columnWidth < 1) {
    throw new Error('Column width must be greater than 0.');
  }

<<<<<<< HEAD
  if (useWrapWord) {
    return (0, _wrapWord2.default)(value, columnWidth).length;
  }

  return Math.ceil((0, _stringWidth2.default)(value) / columnWidth);
};
=======
  return (0, _wrapCell.default)(value, columnWidth, useWrapWord).length;
};

var _default = calculateCellHeight;
exports.default = _default;
//# sourceMappingURL=calculateCellHeight.js.map
>>>>>>> master
