/*
<<<<<<< HEAD
  Copyright 2017 Google Inc.

  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at

      https://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
*/

import defaultPrecachingExport from './_default.mjs';
import './_version.mjs';

=======
  Copyright 2018 Google LLC

  Use of this source code is governed by an MIT-style
  license that can be found in the LICENSE file or at
  https://opensource.org/licenses/MIT.
*/

import {assert} from 'workbox-core/_private/assert.mjs';
import {addPlugins} from './addPlugins.mjs';
import {addRoute} from './addRoute.mjs';
import {cleanupOutdatedCaches} from './cleanupOutdatedCaches.mjs';
import {getCacheKeyForURL} from './getCacheKeyForURL.mjs';
import {precache} from './precache.mjs';
import {precacheAndRoute} from './precacheAndRoute.mjs';
import {PrecacheController} from './PrecacheController.mjs';
import './_version.mjs';


if (process.env.NODE_ENV !== 'production') {
  assert.isSWEnv('workbox-precaching');
}

>>>>>>> master
/**
 * Most consumers of this module will want to use the
 * [precacheAndRoute()]{@link workbox.precaching.precacheAndRoute}
 * method to add assets to the Cache and respond to network requests with these
 * cached assets.
 *
 * If you require finer grained control, you can use the
 * [PrecacheController]{@link workbox.precaching.PrecacheController}
 * to determine when performed.
 *
 * @namespace workbox.precaching
 */

<<<<<<< HEAD
export * from './_public.mjs';

export default defaultPrecachingExport;
=======
export {
  addPlugins,
  addRoute,
  cleanupOutdatedCaches,
  getCacheKeyForURL,
  precache,
  precacheAndRoute,
  PrecacheController,
};
>>>>>>> master
